def Environment="${params.'Environment'}"
def Branch="${params.'Branch'}"
def FeatureFilePath="${params.'FeatureFilePath'}"
def FeatureFile="${params.'FeatureFile'}"
def JobName="${params.'JobName'}"
def TestSet="${params.'TestSet'}"
def Tags="${params.'Tags'}"
def Browser="${params.'Browser'}"

pipeline {
 agent any
 options {
		buildDiscarder(logRotator(daysToKeepStr: '3'))}
 tools {
        maven 'Maven'}
  stages{
  stage ('Initialize') {
   steps{
    script {
       currentBuild.displayName = "${Environment}-${FeatureFile}-SampleTests-#${BUILD_NUMBER}"}
       withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']){
       					sh '''
       						echo "Initialize : Install browser and jdk"

       						# Install chrome.

       						curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
       						#sudo apt-get clean
       						sudo apt-get update
       						#sudo apt-get -y upgrade
       						wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
       						sudo apt-get -f install
       						sudo apt autoremove
       						sudo apt-get -y install libxss1
       						sudo apt-get -y install libgconf2-4
       						sudo apt-get -y install libappindicator1
       						sudo apt-get -y install libindicator7
       						sudo apt-get install -y xdg-utils
       						sudo apt-get install -y fonts-liberation
       						sudo dpkg -i google-chrome-stable_current_amd64.deb

       						# Install xvfb
       						sudo apt-get update
       						sudo apt-get install -y unzip openjdk-8-jre-headless xvfb libxi6 libgconf-2-4
       						xvfb-run --server-args='-screen 0, 1024x768x16' google-chrome -start-maximized > /dev/null &
       					'''
       				}
         }
     }
     stage ('Build and Test') {
        steps {
         script{
           withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']){
           def featurefilepath_by_tags = [
           									"Default": " -t ~@wip -t ~@ignore -t ~@merged",
           									"Regression": " -t ~@wip -t ~@ignore -t ~@merged"
           								]
           def lookup_key = "${Tags}"
           def CucumberOptionsVar
           	if(featurefilepath_by_tags[lookup_key]){
           		CucumberOptionsVar = featurefilepath_by_tags[lookup_key]
           		CucumberOptionsVar = "${FeatureFilePath}${FeatureFile}${CucumberOptionsVar}"
           		}else {
           		CucumberOptionsVar = "${FeatureFilePath}${FeatureFile}"}
           		echo "${CucumberOptionsVar}"
           		sh '''
           		  echo "Build and Test Stage : Build file not required from s3"
                 mvn clean install -f tenx-web-automation/pom.xml -Denvironment="'''+Environment+'''" -Dbrowser="'''+Browser+'''" -Dcucumber.options="'''+CucumberOptionsVar+'''"
                 if [ -s 'ClarkUIProject/target/ClarkProject-1.0-SNAPSHOT.jar' ]; then
                 	echo "Result Upload to S3 : Build file generated properly to push"
                 	else
                 	echo "Result Upload to S3 : Build file not generated properly to push"
                 	sleep 30
                 fi
                 cd $WORKSPACE/ClarkUIProject/target/
                 ls
                '''
           }
         }

        }
     }

}

}
